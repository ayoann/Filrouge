{#

 This file is part of the FOSCommentBundle package.

 (c) FriendsOfSymfony <http://friendsofsymfony.github.com/>

 This source file is subject to the MIT license that is bundled
 with this source code in the file LICENSE.

#}

{% block fos_comment_comment %}
<div class="row">
    <div class="col-xs-10 col-xs-offset-1">
        <div id="fos_comment_{{ comment.id }}" class="fos_comment_comment_show fos_comment_comment_depth_{{ depth }}" {% if parent is defined and parent is not null %}data-parent="{{ parent.id }}"{% endif %}>

            <div class="fos_comment_comment_metas">
                {% block fos_comment_comment_metas %}
                    {% block fos_comment_comment_metas_edit %}
                        {% if fos_comment_can_edit_comment(comment) %}
                            <button id="btncomments" class="btn btn-warning col-xs-offset-9" data-container="#fos_comment_comment_body_{{ comment.id }}" data-url="{{ url("fos_comment_edit_thread_comment", {"id": comment.thread.id, "commentId": comment.id}) }}" class="fos_comment_comment_edit_show_form">{% trans from 'FOSCommentBundle' %}fos_comment_comment_edit{% endtrans %}</button>
                        {% endif %}
                    {% endblock fos_comment_comment_metas_edit %}

                    {% block fos_comment_comment_metas_delete %}
                        {% if fos_comment_can_delete_comment(comment) %}
                            {% if comment is fos_comment_in_state(constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_DELETED')) %}
                                {# undelete #}
                                <button id="btncomments" class="btn btn-danger" data-url="{{ url("fos_comment_remove_thread_comment", {"id": comment.thread.id, "commentId": comment.id, "value": constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_VISIBLE') }) }}" class="fos_comment_comment_remove">{% trans from 'FOSCommentBundle' %}fos_comment_comment_undelete{% endtrans %}</button>
                            {% else %}
                                {# delete #}
                                <button id="btncomments" class="btn btn-danger" data-url="{{ url("fos_comment_remove_thread_comment", {"id": comment.thread.id, "commentId": comment.id, "value":  constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_DELETED')}) }}" class="fos_comment_comment_remove">{% trans from 'FOSCommentBundle' %}fos_comment_comment_delete{% endtrans %}</button>
                            {% endif %}
                        {% endif %}
                    {% endblock fos_comment_comment_metas_delete %}

                    {% block fos_comment_comment_metas_authorline %}
                <div id="comments"  class="row">
                    <div class="col-xs-12">
                        <div class="col-xs-4">
                            {% trans from 'FOSCommentBundle' %}fos_comment_comment_show_by{% endtrans %}
                            <span class="fos_comment_comment_authorname">
                                {% if comment is fos_comment_in_state(constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_DELETED')) %}
                            {% trans from 'FOSCommentBundle' %}fos_comment_comment_deleted{% endtrans %}
                                {% else %}
                                    {{ comment.authorName }}
                                {% endif %}
                            </span> - {{ comment.createdAt|date }}
                        </div>
                        {% if is_granted("IS_AUTHENTICATED_REMEMBERED") %}
                            <div class="col-xs-4 col-xs-offset-4">
                            {% block fos_comment_comment_metas_voting %}
                                {% if fos_comment_can_vote(comment) %}
                                    <div class="fos_comment_comment_voting">
                                        <button class="glyphicon glyphicon-thumbs-up" data-url="{{ url("fos_comment_new_thread_comment_votes", {"id": comment.thread.id, "commentId": comment.id, "value": 1}) }}" class="fos_comment_comment_vote">{% trans from 'FOSCommentBundle' %}fos_comment_comment_show_voteup{% endtrans %}</button>
                                        <button class="glyphicon glyphicon-thumbs-down" data-url="{{ url("fos_comment_new_thread_comment_votes", {"id": comment.thread.id, "commentId": comment.id, "value": -1}) }}" class="fos_comment_comment_vote">{% trans from 'FOSCommentBundle' %}fos_comment_comment_show_votedown{% endtrans %}</button>
                                    </div>
                                {% endif %}
                            {% endblock fos_comment_comment_metas_voting %}
                            {% endif %}
                        </div>
                    </div>
                </div>
                    {% endblock fos_comment_comment_metas_authorline %}
                {% endblock fos_comment_comment_metas %}
            </div>

            <div id="fos_comment_comment_body_{{ comment.id }}" class="fos_comment_comment_body">
                {% block fos_comment_comment_body %}
                    <div class="row">
                        <div id="commentable" class="col-xs-12">
                            {% if comment is fos_comment_in_state(constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_DELETED')) %}
                                {% trans from 'FOSCommentBundle' %}fos_comment_comment_deleted{% endtrans %}
                            {% else %}
                                {% if comment is fos_comment_raw %}
                                    {{ comment.rawBody | raw }}
                                {% else %}
                                    {{ comment.body | nl2br }}
                                {% endif %}
                            {% endif %}
                        </div>
                    </div>
                {% endblock fos_comment_comment_body %}
            </div>

            {% block fos_comment_comment_children %}
                {% if view is not same as('flat') %}
                    {% if fos_comment_can_comment(comment) %}
                        <div class="fos_comment_comment_reply">
                            {% block fos_comment_comment_reply %}
                            {% endblock fos_comment_comment_reply %}
                        </div>
                    {% endif %}
                    <div class="fos_comment_comment_replies">

                        {% if children is defined %}
                            {% include "FOSCommentBundle:Thread:comments.html.twig" with { "comments": children, "depth": depth + 1, "parent": comment, "view": view } %}
                        {% endif %}

                    </div>
                {% elseif view is same as('flat') and children is defined %}
                    {% include "FOSCommentBundle:Thread:comments.html.twig" with { "comments": children, "depth": depth + 1, "parent": comment, "view": view } %}
                {% endif %}
            {% endblock fos_comment_comment_children %}
        </div>
    </div>
</div>
{% endblock fos_comment_comment %}
